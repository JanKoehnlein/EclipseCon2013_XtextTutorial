/*
 * generated by Xtext
 */
package org.eclipse.xtext.tutorial.survey.validation

import org.eclipse.xtext.tutorial.survey.survey.Choice
import org.eclipse.xtext.tutorial.survey.survey.Question
import org.eclipse.xtext.validation.Check

import static org.eclipse.xtext.tutorial.survey.survey.SurveyPackage$Literals.*

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class SurveyValidator extends AbstractSurveyValidator {

	@Check
	def textMustNotBeEmpty(Question question) {
		if(question.getText().isEmpty()) {
			error("Empty question is illegal", QUESTION__TEXT)
		}
	}

	@Check
	def textMustNotBeEmpty(Choice choice) {
		if(choice.getText().isEmpty()) {
			error("Empty choice is illegal", CHOICE__TEXT)
		}
	}

	@Check 
	def duplicateChoiceText(ChoiceQuestion question) {
		var nameToChoice = <String, Choice> newHashMap
		for(choice: question.getChoices()) {
			val choiceWithSameName = nameToChoice.put(choice.getText(), choice)
			if(choiceWithSameName != null) {
				error("Duplicate choice text", choice, CHOICE__TEXT)
				error("Duplicate choice text", choiceWithSameName, CHOICE__TEXT)
			}
		}
	}
}
